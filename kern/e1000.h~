#ifndef JOS_KERN_E1000_H
#define JOS_KERN_E1000_H

#include <kern/pci.h>

volatile uint32_t *e1000;

// http://cvs.savannah.gnu.org/viewvc/*checkout*/qemu/hw/e1000_hw.h?root=qemu

#define E1000_VENDORID 0x8086
#define E1000_DEVICEID 0x100e

#define E1000_TXDESC 64
#define E1000_RCVDESC 64
#define TX_PKT_SIZE 1518	// The maximum size of an Ethernet packet is 1518 bytes

// Register Set
#define E1000_STATUS   0x00008  /* Device Status - RO */

#define E1000_TDBAL    0x03800  /* TX Descriptor Base Address Low - RW */
#define E1000_TDBAH    0x03804  /* TX Descriptor Base Address High - RW */
#define E1000_TDLEN    0x03808  /* TX Descriptor Length - RW */
#define E1000_TDH      0x03810  /* TX Descriptor Head - RW */
#define E1000_TDT      0x03818  /* TX Descripotr Tail - RW */


#define E1000_TCTL     0x00400  /* TX Control - RW */
#define E1000_TCTL_EN     		0x00000002    /* enable tx */
#define E1000_TCTL_PSP    0x00000008    /* pad short packets */
#define E1000_TCTL_CT     0x00000ff0    /* collision threshold */
#define E1000_TCTL_COLD   0x003ff000    /* collision distance */


#define E1000_TIPG     0x00410  /* TX Inter-packet gap -RW */

/* Transmit Descriptor bit definitions */
#define E1000_TXD_CMD_RS     0x00000008 /* Report Status */
#define E1000_TXD_CMD_EOP    0x00000001 /* End of Packet */
#define E1000_TXD_STAT_DD    0x00000001 /* Descriptor Done */


struct tx_desc
{
	uint64_t addr;
	uint16_t length;
	uint8_t cso;
	uint8_t cmd;
	uint8_t status;
	uint8_t css;
	uint16_t special;
};

struct tx_pkt
{
	uint8_t buf[TX_PKT_SIZE];
};


int e1000_pci_attach(struct pci_func *pcif);
int e1000_pkt_transmit(char *data, int length);

#endif	// JOS_KERN_E1000_H

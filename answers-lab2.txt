Q1: uintptr_t
Q2: 
Entry   Base Virtual Address    Points to (logically)
1023    0xfff00000              Page table for top 4MB of phys memory
1022    0xffe00000                                  
960     KERNBASE                Remapped Memory Region
959     KSTACKTOP-PTSIZE      Kernel Stack for CPU0
957     UVPT                    Page Table
956     UPAGES                  Physical pages
2       0x00800000              ?
1       0x00400000              ?
0       0x00000000              [see next question]

Q3: User programs can only access memory through VMA, and CPU would translate it into PMA according to the paging. The page table sets permission levels so that code in user space won't be able to access kernel memorys

Q4: 4GB. Two level paging, 1024*1024*4096 byes.
Q5: (1024+1)*4096 bytes overhead. 4096 for PDE, 1024*4096 for PTE
Q6: at entry.S:67 

	mov	$relocated, %eax
	jmp	*%eax

   This is possible because the [0,4M) is still mapped to [0,4M)
   It's necessary because KERNEL is linked at KERNBASE, which is beyond 4M.

Challenge: Installed showmappings, implemented mapchmod, implemented memdump
